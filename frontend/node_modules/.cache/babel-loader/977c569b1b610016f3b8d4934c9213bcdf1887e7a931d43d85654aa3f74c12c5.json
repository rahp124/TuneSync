{"ast":null,"code":"var _jsxFileName = \"/Users/rahul/Desktop/TuneSync/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\n// src/components/Dashboard.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [spotifyTracks, setSpotifyTracks] = useState([]);\n  const [youtubeVideos, setYouTubeVideos] = useState([]);\n  const [spotifyToken, setSpotifyToken] = useState(localStorage.getItem('spotify_access_token'));\n  const [youtubeToken, setYouTubeToken] = useState(localStorage.getItem('youtube_access_token'));\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n\n    // Check if we received a Spotify token\n    if (urlParams.get('access_token')) {\n      const token = urlParams.get('access_token');\n      localStorage.setItem('spotify_access_token', token); // Store it\n      setSpotifyToken(token);\n      fetchSpotifyRecentlyPlayedTracks(token);\n    }\n\n    // Check if we received a YouTube token\n    if (urlParams.get('youtube_access_token')) {\n      const token = urlParams.get('youtube_access_token');\n      localStorage.setItem('youtube_access_token', token); // Store it\n      setYouTubeToken(token);\n      fetchYouTubePlaylists(token);\n    }\n  }, []);\n  const fetchSpotifyRecentlyPlayedTracks = async token => {\n    try {\n      const response = await axios.get('https://api.spotify.com/v1/me/player/recently-played', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSpotifyTracks(response.data.items);\n    } catch (error) {\n      console.error('Error fetching Spotify recently played tracks:', error);\n    }\n  };\n  const fetchYouTubePlaylists = async token => {\n    try {\n      const response = await axios.get('https://youtube.googleapis.com/youtube/v3/playlists?part=snippet&mine=true', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setYouTubeVideos(response.data.items);\n    } catch (error) {\n      console.error('Error fetching YouTube playlists:', error);\n    }\n  };\n  const handleSpotifyLogin = () => {\n    const BASE_URL = 'http://localhost:3001'; // Your backend URL\n    window.location.href = `${BASE_URL}/spotify/login`; // Redirect to Spotify login\n  };\n  const handleYouTubeLogin = () => {\n    const BASE_URL = 'http://localhost:3001'; // Your backend URL\n    window.location.href = `${BASE_URL}/youtube/login`; // Redirect to YouTube login\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to the Music Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSpotifyLogin,\n      children: \"Login to Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleYouTubeLogin,\n      children: \"Login to YouTube Music\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recently Played Tracks from Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: spotifyTracks.map(track => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [track.track.name, \" by \", track.track.artists.map(artist => artist.name).join(', ')]\n      }, track.track.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your YouTube Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: youtubeVideos.map(video => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: video.snippet.title\n      }, video.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"pYZaBnzDO46r0n2HqQGYQW8J9/8=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Dashboard","_s","spotifyTracks","setSpotifyTracks","youtubeVideos","setYouTubeVideos","spotifyToken","setSpotifyToken","localStorage","getItem","youtubeToken","setYouTubeToken","urlParams","URLSearchParams","window","location","search","get","token","setItem","fetchSpotifyRecentlyPlayedTracks","fetchYouTubePlaylists","response","headers","Authorization","data","items","error","console","handleSpotifyLogin","BASE_URL","href","handleYouTubeLogin","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","track","name","artists","artist","join","id","video","snippet","title","_c","$RefreshReg$"],"sources":["/Users/rahul/Desktop/TuneSync/frontend/src/components/Dashboard.js"],"sourcesContent":["// src/components/Dashboard.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Dashboard = () => {\n  const [spotifyTracks, setSpotifyTracks] = useState([]);\n  const [youtubeVideos, setYouTubeVideos] = useState([]);\n  const [spotifyToken, setSpotifyToken] = useState(localStorage.getItem('spotify_access_token'));\n  const [youtubeToken, setYouTubeToken] = useState(localStorage.getItem('youtube_access_token'));\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n\n    // Check if we received a Spotify token\n    if (urlParams.get('access_token')) {\n      const token = urlParams.get('access_token');\n      localStorage.setItem('spotify_access_token', token); // Store it\n      setSpotifyToken(token);\n      fetchSpotifyRecentlyPlayedTracks(token);\n    }\n\n    // Check if we received a YouTube token\n    if (urlParams.get('youtube_access_token')) {\n      const token = urlParams.get('youtube_access_token');\n      localStorage.setItem('youtube_access_token', token); // Store it\n      setYouTubeToken(token);\n      fetchYouTubePlaylists(token);\n    }\n  }, []);\n\n  const fetchSpotifyRecentlyPlayedTracks = async (token) => {\n    try {\n      const response = await axios.get('https://api.spotify.com/v1/me/player/recently-played', {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setSpotifyTracks(response.data.items);\n    } catch (error) {\n      console.error('Error fetching Spotify recently played tracks:', error);\n    }\n  };\n\n  const fetchYouTubePlaylists = async (token) => {\n    try {\n      const response = await axios.get('https://youtube.googleapis.com/youtube/v3/playlists?part=snippet&mine=true', {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setYouTubeVideos(response.data.items);\n    } catch (error) {\n      console.error('Error fetching YouTube playlists:', error);\n    }\n  };\n\n  const handleSpotifyLogin = () => {\n    const BASE_URL = 'http://localhost:3001'; // Your backend URL\n    window.location.href = `${BASE_URL}/spotify/login`; // Redirect to Spotify login\n  };\n\n  const handleYouTubeLogin = () => {\n    const BASE_URL = 'http://localhost:3001'; // Your backend URL\n    window.location.href = `${BASE_URL}/youtube/login`; // Redirect to YouTube login\n  };\n\n  return (\n    <div>\n      <h1>Welcome to the Music Tracker</h1>\n      <button onClick={handleSpotifyLogin}>Login to Spotify</button>\n      <button onClick={handleYouTubeLogin}>Login to YouTube Music</button>\n\n      <h2>Recently Played Tracks from Spotify</h2>\n      <ul>\n        {spotifyTracks.map((track) => (\n          <li key={track.track.id}>\n            {track.track.name} by {track.track.artists.map(artist => artist.name).join(', ')}\n          </li>\n        ))}\n      </ul>\n\n      <h2>Your YouTube Playlists</h2>\n      <ul>\n        {youtubeVideos.map((video) => (\n          <li key={video.id}>{video.snippet.title}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}