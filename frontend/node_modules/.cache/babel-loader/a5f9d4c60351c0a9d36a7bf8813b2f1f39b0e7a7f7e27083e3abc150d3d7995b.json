{"ast":null,"code":"var _jsxFileName = \"/Users/rahul/Desktop/TuneSync/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\n// src/components/Dashboard.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [spotifyTracks, setSpotifyTracks] = useState([]);\n  const [youtubeVideos, setYouTubeVideos] = useState([]);\n\n  // Extract tokens from URL\n  const spotifyToken = new URLSearchParams(window.location.search).get('access_token');\n  const youtubeToken = new URLSearchParams(window.location.search).get('youtube_access_token');\n  useEffect(() => {\n    if (spotifyToken) {\n      fetchSpotifyRecentlyPlayedTracks(spotifyToken);\n    }\n    if (youtubeToken) {\n      fetchYouTubePlaylists(youtubeToken);\n    }\n  }, [spotifyToken, youtubeToken]);\n  const fetchSpotifyRecentlyPlayedTracks = async token => {\n    try {\n      const response = await axios.get('https://api.spotify.com/v1/me/player/recently-played', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSpotifyTracks(response.data.items);\n    } catch (error) {\n      console.error('Error fetching Spotify recently played tracks:', error);\n    }\n  };\n  const fetchYouTubePlaylists = async token => {\n    try {\n      const response = await axios.get('https://youtube.googleapis.com/youtube/v3/playlists?part=snippet&mine=true', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setYouTubeVideos(response.data.items);\n    } catch (error) {\n      console.error('Error fetching YouTube playlists:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recently Played Tracks from Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: spotifyTracks.map(track => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [track.track.name, \" by \", track.track.artists.map(artist => artist.name).join(', ')]\n      }, track.track.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your YouTube Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: youtubeVideos.map(video => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: video.snippet.title\n      }, video.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"ylADeM1ADEeyZHNYH4N8LlKNbSc=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Dashboard","_s","spotifyTracks","setSpotifyTracks","youtubeVideos","setYouTubeVideos","spotifyToken","URLSearchParams","window","location","search","get","youtubeToken","fetchSpotifyRecentlyPlayedTracks","fetchYouTubePlaylists","token","response","headers","Authorization","data","items","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","track","name","artists","artist","join","id","video","snippet","title","_c","$RefreshReg$"],"sources":["/Users/rahul/Desktop/TuneSync/frontend/src/components/Dashboard.js"],"sourcesContent":["// src/components/Dashboard.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Dashboard = () => {\n  const [spotifyTracks, setSpotifyTracks] = useState([]);\n  const [youtubeVideos, setYouTubeVideos] = useState([]);\n\n  // Extract tokens from URL\n  const spotifyToken = new URLSearchParams(window.location.search).get('access_token');\n  const youtubeToken = new URLSearchParams(window.location.search).get('youtube_access_token');\n\n  useEffect(() => {\n    if (spotifyToken) {\n      fetchSpotifyRecentlyPlayedTracks(spotifyToken);\n    }\n    if (youtubeToken) {\n      fetchYouTubePlaylists(youtubeToken);\n    }\n  }, [spotifyToken, youtubeToken]);\n\n  const fetchSpotifyRecentlyPlayedTracks = async (token) => {\n    try {\n      const response = await axios.get('https://api.spotify.com/v1/me/player/recently-played', {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setSpotifyTracks(response.data.items);\n    } catch (error) {\n      console.error('Error fetching Spotify recently played tracks:', error);\n    }\n  };\n\n  const fetchYouTubePlaylists = async (token) => {\n    try {\n      const response = await axios.get('https://youtube.googleapis.com/youtube/v3/playlists?part=snippet&mine=true', {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setYouTubeVideos(response.data.items);\n    } catch (error) {\n      console.error('Error fetching YouTube playlists:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Recently Played Tracks from Spotify</h2>\n      <ul>\n        {spotifyTracks.map((track) => (\n          <li key={track.track.id}>\n            {track.track.name} by {track.track.artists.map(artist => artist.name).join(', ')}\n          </li>\n        ))}\n      </ul>\n\n      <h2>Your YouTube Playlists</h2>\n      <ul>\n        {youtubeVideos.map((video) => (\n          <li key={video.id}>{video.snippet.title}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}