{"ast":null,"code":"// Spotify: Get most played tracks (top tracks)\nexport const fetchSpotifyData = async spotifyToken => {\n  try {\n    const response = await fetch('https://api.spotify.com/v1/me/top/tracks?limit=10&time_range=medium_term', {\n      headers: {\n        Authorization: `Bearer ${spotifyToken}`\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching Spotify data:', error);\n  }\n};\n\n// YouTube: Fetch user's liked videos (YouTube doesn't provide exact \"most played\" metrics)\nexport const fetchYoutubeData = async youtubeToken => {\n  try {\n    const response = await fetch(`https://www.googleapis.com/youtube/v3/videos?myRating=like&part=snippet,contentDetails,statistics&maxResults=10&key=${youtubeToken}`);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching YouTube data:', error);\n  }\n};","map":{"version":3,"names":["fetchSpotifyData","spotifyToken","response","fetch","headers","Authorization","data","json","error","console","fetchYoutubeData","youtubeToken"],"sources":["/Users/rahul/Desktop/TuneSync/frontend/src/api.js"],"sourcesContent":["// Spotify: Get most played tracks (top tracks)\nexport const fetchSpotifyData = async (spotifyToken) => {\n    try {\n      const response = await fetch('https://api.spotify.com/v1/me/top/tracks?limit=10&time_range=medium_term', {\n        headers: {\n          Authorization: `Bearer ${spotifyToken}`,\n        },\n      });\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching Spotify data:', error);\n    }\n  };\n  \n  // YouTube: Fetch user's liked videos (YouTube doesn't provide exact \"most played\" metrics)\n  export const fetchYoutubeData = async (youtubeToken) => {\n    try {\n      const response = await fetch(\n        `https://www.googleapis.com/youtube/v3/videos?myRating=like&part=snippet,contentDetails,statistics&maxResults=10&key=${youtubeToken}`\n      );\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching YouTube data:', error);\n    }\n  };\n  "],"mappings":"AAAA;AACA,OAAO,MAAMA,gBAAgB,GAAG,MAAOC,YAAY,IAAK;EACpD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0EAA0E,EAAE;MACvGC,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUJ,YAAY;MACvC;IACF,CAAC,CAAC;IACF,MAAMK,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;EACtD;AACF,CAAC;;AAED;AACA,OAAO,MAAME,gBAAgB,GAAG,MAAOC,YAAY,IAAK;EACtD,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAC1B,uHAAuHQ,YAAY,EACrI,CAAC;IACD,MAAML,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;EACtD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}