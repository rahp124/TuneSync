{"ast":null,"code":"var _jsxFileName = \"/Users/rahul/Desktop/TuneSync/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\n// src/components/Dashboard.js\nimport React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  spotifyToken,\n  youtubeToken\n}) => {\n  _s();\n  const [spotifyData, setSpotifyData] = useState(null);\n  const [youtubeData, setYoutubeData] = useState(null);\n\n  // Memoize fetch functions\n  const fetchSpotifyData = useCallback(async () => {\n    if (!spotifyToken) return; // Exit early if no token\n\n    try {\n      const response = await axios.get('https://api.spotify.com/v1/me/player/recently-played', {\n        headers: {\n          Authorization: `Bearer ${spotifyToken}`\n        }\n      });\n      setSpotifyData(response.data);\n    } catch (error) {\n      console.error('Error fetching Spotify data:', error);\n    }\n  }, [spotifyToken]);\n  const fetchYoutubeData = useCallback(async () => {\n    if (!youtubeToken) return; // Exit early if no token\n\n    try {\n      const response = await axios.get('https://www.googleapis.com/youtube/v3/videos', {\n        params: {\n          part: 'snippet,contentDetails',\n          mySubscribers: true,\n          key: process.env.REACT_APP_YOUTUBE_API_KEY\n        },\n        headers: {\n          Authorization: `Bearer ${youtubeToken}`\n        }\n      });\n      setYoutubeData(response.data);\n    } catch (error) {\n      console.error('Error fetching YouTube data:', error);\n    }\n  }, [youtubeToken]);\n\n  // Fetch data when tokens change\n  useEffect(() => {\n    fetchSpotifyData();\n    fetchYoutubeData();\n  }, [fetchSpotifyData, fetchYoutubeData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), spotifyData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Spotify Recently Played\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: spotifyData.items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.track.name, \" by \", item.track.artists.map(artist => artist.name).join(', ')]\n        }, item.track.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), youtubeData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"YouTube Music Recently Played\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: youtubeData.items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item.snippet.title\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"pFC1YrMGhOEU2OtmIM582E/CoX0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","axios","jsxDEV","_jsxDEV","Dashboard","spotifyToken","youtubeToken","_s","spotifyData","setSpotifyData","youtubeData","setYoutubeData","fetchSpotifyData","response","get","headers","Authorization","data","error","console","fetchYoutubeData","params","part","mySubscribers","key","process","env","REACT_APP_YOUTUBE_API_KEY","children","fileName","_jsxFileName","lineNumber","columnNumber","items","map","item","track","name","artists","artist","join","id","snippet","title","_c","$RefreshReg$"],"sources":["/Users/rahul/Desktop/TuneSync/frontend/src/components/Dashboard.js"],"sourcesContent":["// src/components/Dashboard.js\nimport React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\n\nconst Dashboard = ({ spotifyToken, youtubeToken }) => {\n  const [spotifyData, setSpotifyData] = useState(null);\n  const [youtubeData, setYoutubeData] = useState(null);\n\n  // Memoize fetch functions\n  const fetchSpotifyData = useCallback(async () => {\n    if (!spotifyToken) return; // Exit early if no token\n\n    try {\n      const response = await axios.get('https://api.spotify.com/v1/me/player/recently-played', {\n        headers: {\n          Authorization: `Bearer ${spotifyToken}`,\n        },\n      });\n      setSpotifyData(response.data);\n    } catch (error) {\n      console.error('Error fetching Spotify data:', error);\n    }\n  }, [spotifyToken]);\n\n  const fetchYoutubeData = useCallback(async () => {\n    if (!youtubeToken) return; // Exit early if no token\n\n    try {\n      const response = await axios.get('https://www.googleapis.com/youtube/v3/videos', {\n        params: {\n          part: 'snippet,contentDetails',\n          mySubscribers: true,\n          key: process.env.REACT_APP_YOUTUBE_API_KEY,\n        },\n        headers: {\n          Authorization: `Bearer ${youtubeToken}`,\n        },\n      });\n      setYoutubeData(response.data);\n    } catch (error) {\n      console.error('Error fetching YouTube data:', error);\n    }\n  }, [youtubeToken]);\n\n  // Fetch data when tokens change\n  useEffect(() => {\n    fetchSpotifyData();\n    fetchYoutubeData();\n  }, [fetchSpotifyData, fetchYoutubeData]);\n\n  return (\n    <div>\n      <h1>Dashboard</h1>\n      {spotifyData && (\n        <div>\n          <h2>Spotify Recently Played</h2>\n          <ul>\n            {spotifyData.items.map(item => (\n              <li key={item.track.id}>\n                {item.track.name} by {item.track.artists.map(artist => artist.name).join(', ')}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {youtubeData && (\n        <div>\n          <h2>YouTube Music Recently Played</h2>\n          <ul>\n            {youtubeData.items.map(item => (\n              <li key={item.id}>{item.snippet.title}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACA,MAAMa,gBAAgB,GAAGZ,WAAW,CAAC,YAAY;IAC/C,IAAI,CAACK,YAAY,EAAE,OAAO,CAAC;;IAE3B,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,sDAAsD,EAAE;QACvFC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUX,YAAY;QACvC;MACF,CAAC,CAAC;MACFI,cAAc,CAACI,QAAQ,CAACI,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC,EAAE,CAACb,YAAY,CAAC,CAAC;EAElB,MAAMe,gBAAgB,GAAGpB,WAAW,CAAC,YAAY;IAC/C,IAAI,CAACM,YAAY,EAAE,OAAO,CAAC;;IAE3B,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,8CAA8C,EAAE;QAC/EO,MAAM,EAAE;UACNC,IAAI,EAAE,wBAAwB;UAC9BC,aAAa,EAAE,IAAI;UACnBC,GAAG,EAAEC,OAAO,CAACC,GAAG,CAACC;QACnB,CAAC;QACDZ,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUV,YAAY;QACvC;MACF,CAAC,CAAC;MACFK,cAAc,CAACE,QAAQ,CAACI,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC,EAAE,CAACZ,YAAY,CAAC,CAAC;;EAElB;EACAR,SAAS,CAAC,MAAM;IACdc,gBAAgB,CAAC,CAAC;IAClBQ,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACR,gBAAgB,EAAEQ,gBAAgB,CAAC,CAAC;EAExC,oBACEjB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBxB,WAAW,iBACVL,OAAA;MAAAyB,QAAA,gBACEzB,OAAA;QAAAyB,QAAA,EAAI;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChC7B,OAAA;QAAAyB,QAAA,EACGpB,WAAW,CAACyB,KAAK,CAACC,GAAG,CAACC,IAAI,iBACzBhC,OAAA;UAAAyB,QAAA,GACGO,IAAI,CAACC,KAAK,CAACC,IAAI,EAAC,MAAI,EAACF,IAAI,CAACC,KAAK,CAACE,OAAO,CAACJ,GAAG,CAACK,MAAM,IAAIA,MAAM,CAACF,IAAI,CAAC,CAACG,IAAI,CAAC,IAAI,CAAC;QAAA,GADvEL,IAAI,CAACC,KAAK,CAACK,EAAE;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAElB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN,EACAtB,WAAW,iBACVP,OAAA;MAAAyB,QAAA,gBACEzB,OAAA;QAAAyB,QAAA,EAAI;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtC7B,OAAA;QAAAyB,QAAA,EACGlB,WAAW,CAACuB,KAAK,CAACC,GAAG,CAACC,IAAI,iBACzBhC,OAAA;UAAAyB,QAAA,EAAmBO,IAAI,CAACO,OAAO,CAACC;QAAK,GAA5BR,IAAI,CAACM,EAAE;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA0B,CAC3C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACzB,EAAA,CAzEIH,SAAS;AAAAwC,EAAA,GAATxC,SAAS;AA2Ef,eAAeA,SAAS;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}