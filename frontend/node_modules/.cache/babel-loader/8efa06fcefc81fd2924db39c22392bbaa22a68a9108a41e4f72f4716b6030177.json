{"ast":null,"code":"var _jsxFileName = \"/Users/rahul/Desktop/TuneSync/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchSpotifyData, fetchYoutubeData, fetchSpotifyRecommendations, fetchYoutubeRecommendations, countGenres } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  spotifyToken,\n  youtubeToken\n}) => {\n  _s();\n  const [spotifyData, setSpotifyData] = useState([]);\n  const [youtubeData, setYoutubeData] = useState([]);\n  const [topGenres, setTopGenres] = useState([]);\n  const [spotifyRecommendations, setSpotifyRecommendations] = useState([]);\n  const [youtubeRecommendations, setYoutubeRecommendations] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      let spotifyRes = {\n        tracks: [],\n        genres: []\n      };\n      let youtubeRes = {\n        videos: [],\n        genres: []\n      };\n      if (spotifyToken) {\n        try {\n          spotifyRes = await fetchSpotifyData(spotifyToken);\n          setSpotifyData(spotifyRes.tracks);\n        } catch (error) {\n          console.error(\"Error fetching Spotify data:\", error);\n        }\n      }\n      if (youtubeToken) {\n        try {\n          youtubeRes = await fetchYoutubeData(youtubeToken);\n          setYoutubeData(youtubeRes.videos);\n        } catch (error) {\n          console.error(\"Error fetching YouTube data:\", error);\n        }\n      }\n\n      // Combine genres and calculate most frequent\n      if (spotifyToken && youtubeToken) {\n        const spotifyGenres = spotifyRes.genres || [];\n        const youtubeGenres = youtubeRes.genres || [];\n        const genres = countGenres(spotifyGenres, youtubeGenres);\n        setTopGenres(genres);\n        try {\n          const spotifyRec = await fetchSpotifyRecommendations(spotifyToken, genres);\n          setSpotifyRecommendations(spotifyRec);\n        } catch (error) {\n          console.error(\"Error fetching Spotify recommendations:\", error);\n        }\n        try {\n          const youtubeRec = await fetchYoutubeRecommendations(youtubeToken, genres);\n          setYoutubeRecommendations(youtubeRec);\n        } catch (error) {\n          console.error(\"Error fetching YouTube recommendations:\", error);\n        }\n      }\n    };\n    fetchData();\n  }, [spotifyToken, youtubeToken]);\n\n  // Logout function for Spotify\n  const handleSpotifyLogout = () => {\n    localStorage.removeItem('spotifyToken');\n    setSpotifyData([]);\n    window.location.href = '/'; // Redirect to the dashboard\n  };\n\n  // Logout function for YouTube\n  const handleYoutubeLogout = () => {\n    localStorage.removeItem('youtubeToken');\n    setYoutubeData([]);\n    window.location.href = '/'; // Redirect to the dashboard\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), !spotifyToken && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You are not logged into Spotify.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"http://localhost:3001/spotify/login\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Log into Spotify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), !youtubeToken && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You are not logged into YouTube.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"http://localhost:3001/youtube/login\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Log into YouTube\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), spotifyToken && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Top Played Spotify Tracks:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), spotifyData && spotifyData.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: spotifyData.map(track => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [track.name, \" by \", track.artists.map(artist => artist.name).join(', ')]\n        }, track.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Spotify data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSpotifyLogout,\n        children: \"Log out of Spotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), youtubeToken && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Liked YouTube Videos:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), youtubeData && youtubeData.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: youtubeData.map(video => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: video.snippet.title\n        }, video.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No YouTube data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleYoutubeLogout,\n        children: \"Log out of YouTube\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), topGenres && topGenres.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Favorite Genres:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: topGenres.map(genre => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [genre[0], \" (Played \", genre[1], \" times)\"]\n        }, genre[0], true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No genre data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this), spotifyRecommendations && spotifyRecommendations.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recommended Spotify Songs:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: spotifyRecommendations.map(track => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: track.name\n        }, track.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Spotify recommendations available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this), youtubeRecommendations && youtubeRecommendations.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recommended YouTube Videos:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: youtubeRecommendations.map(video => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: video.snippet.title\n        }, video.id.videoId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No YouTube recommendations available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this), !spotifyToken && !youtubeToken && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You are not logged into any service. Please log in to Spotify or YouTube.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"GhKTsiS0S2bYhtkWzW2dKU4Kxp4=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","fetchSpotifyData","fetchYoutubeData","fetchSpotifyRecommendations","fetchYoutubeRecommendations","countGenres","jsxDEV","_jsxDEV","Dashboard","spotifyToken","youtubeToken","_s","spotifyData","setSpotifyData","youtubeData","setYoutubeData","topGenres","setTopGenres","spotifyRecommendations","setSpotifyRecommendations","youtubeRecommendations","setYoutubeRecommendations","fetchData","spotifyRes","tracks","genres","youtubeRes","videos","error","console","spotifyGenres","youtubeGenres","spotifyRec","youtubeRec","handleSpotifyLogout","localStorage","removeItem","window","location","href","handleYoutubeLogout","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","track","name","artists","artist","join","id","onClick","video","snippet","title","genre","videoId","_c","$RefreshReg$"],"sources":["/Users/rahul/Desktop/TuneSync/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchSpotifyData, fetchYoutubeData, fetchSpotifyRecommendations, fetchYoutubeRecommendations, countGenres } from '../api';\n\nconst Dashboard = ({ spotifyToken, youtubeToken }) => {\n  const [spotifyData, setSpotifyData] = useState([]);\n  const [youtubeData, setYoutubeData] = useState([]);\n  const [topGenres, setTopGenres] = useState([]);\n  const [spotifyRecommendations, setSpotifyRecommendations] = useState([]);\n  const [youtubeRecommendations, setYoutubeRecommendations] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      let spotifyRes = { tracks: [], genres: [] };\n      let youtubeRes = { videos: [], genres: [] };\n\n      if (spotifyToken) {\n        try {\n          spotifyRes = await fetchSpotifyData(spotifyToken);\n          setSpotifyData(spotifyRes.tracks);\n        } catch (error) {\n          console.error(\"Error fetching Spotify data:\", error);\n        }\n      }\n\n      if (youtubeToken) {\n        try {\n          youtubeRes = await fetchYoutubeData(youtubeToken);\n          setYoutubeData(youtubeRes.videos);\n        } catch (error) {\n          console.error(\"Error fetching YouTube data:\", error);\n        }\n      }\n\n      // Combine genres and calculate most frequent\n      if (spotifyToken && youtubeToken) {\n        const spotifyGenres = spotifyRes.genres || [];\n        const youtubeGenres = youtubeRes.genres || [];\n        const genres = countGenres(spotifyGenres, youtubeGenres);\n        setTopGenres(genres);\n\n        try {\n          const spotifyRec = await fetchSpotifyRecommendations(spotifyToken, genres);\n          setSpotifyRecommendations(spotifyRec);\n        } catch (error) {\n          console.error(\"Error fetching Spotify recommendations:\", error);\n        }\n\n        try {\n          const youtubeRec = await fetchYoutubeRecommendations(youtubeToken, genres);\n          setYoutubeRecommendations(youtubeRec);\n        } catch (error) {\n          console.error(\"Error fetching YouTube recommendations:\", error);\n        }\n      }\n    };\n\n    fetchData();\n  }, [spotifyToken, youtubeToken]);\n\n  // Logout function for Spotify\n  const handleSpotifyLogout = () => {\n    localStorage.removeItem('spotifyToken');\n    setSpotifyData([]);\n    window.location.href = '/'; // Redirect to the dashboard\n  };\n\n  // Logout function for YouTube\n  const handleYoutubeLogout = () => {\n    localStorage.removeItem('youtubeToken');\n    setYoutubeData([]);\n    window.location.href = '/'; // Redirect to the dashboard\n  };\n\n  return (\n    <div>\n      <h1>Dashboard</h1>\n\n      {/* Display the login buttons conditionally based on token availability */}\n      {!spotifyToken && (\n        <div>\n          <p>You are not logged into Spotify.</p>\n          <a href=\"http://localhost:3001/spotify/login\">\n            <button>Log into Spotify</button>\n          </a>\n        </div>\n      )}\n\n      {!youtubeToken && (\n        <div>\n          <p>You are not logged into YouTube.</p>\n          <a href=\"http://localhost:3001/youtube/login\">\n            <button>Log into YouTube</button>\n          </a>\n        </div>\n      )}\n\n      {/* Display Spotify Data */}\n      {spotifyToken && (\n        <div>\n          <h2>Your Top Played Spotify Tracks:</h2>\n          {spotifyData && spotifyData.length > 0 ? (\n            <ul>\n              {spotifyData.map(track => (\n                <li key={track.id}>{track.name} by {track.artists.map(artist => artist.name).join(', ')}</li>\n              ))}\n            </ul>\n          ) : (\n            <p>No Spotify data available.</p>\n          )}\n          <button onClick={handleSpotifyLogout}>Log out of Spotify</button>\n        </div>\n      )}\n\n      {/* Display YouTube Data */}\n      {youtubeToken && (\n        <div>\n          <h2>Your Liked YouTube Videos:</h2>\n          {youtubeData && youtubeData.length > 0 ? (\n            <ul>\n              {youtubeData.map(video => (\n                <li key={video.id}>{video.snippet.title}</li>\n              ))}\n            </ul>\n          ) : (\n            <p>No YouTube data available.</p>\n          )}\n          <button onClick={handleYoutubeLogout}>Log out of YouTube</button>\n        </div>\n      )}\n\n      {/* Display Top Genres */}\n      {topGenres && topGenres.length > 0 ? (\n        <div>\n          <h2>Your Favorite Genres:</h2>\n          <ul>\n            {topGenres.map(genre => (\n              <li key={genre[0]}>{genre[0]} (Played {genre[1]} times)</li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <p>No genre data available.</p>\n      )}\n\n      {/* Display Spotify Recommendations */}\n      {spotifyRecommendations && spotifyRecommendations.length > 0 ? (\n        <div>\n          <h2>Recommended Spotify Songs:</h2>\n          <ul>\n            {spotifyRecommendations.map(track => (\n              <li key={track.id}>{track.name}</li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <p>No Spotify recommendations available.</p>\n      )}\n\n      {/* Display YouTube Recommendations */}\n      {youtubeRecommendations && youtubeRecommendations.length > 0 ? (\n        <div>\n          <h2>Recommended YouTube Videos:</h2>\n          <ul>\n            {youtubeRecommendations.map(video => (\n              <li key={video.id.videoId}>{video.snippet.title}</li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <p>No YouTube recommendations available.</p>\n      )}\n\n      {/* If neither token is present, show a link to the login page */}\n      {!spotifyToken && !youtubeToken && (\n        <div>\n          <p>You are not logged into any service. Please log in to Spotify or YouTube.</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}